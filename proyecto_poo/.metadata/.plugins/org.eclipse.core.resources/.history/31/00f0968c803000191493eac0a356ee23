package frutas;

import javafx.scene.layout.HBox;

import classes.Parcela;
import res.Methods;

import java.util.HashMap;

import javafx.scene.control.Label;

import javafx.scene.image.Image;
import javafx.scene.image.ImageView;

public class Fruits {
	
	private static final String[] paths= {"file:src/frutas/durazno.png", "file:src/frutas/manzana.png",
			"file:src/frutas/naranja.jpg", "file:src/frutas/pera.png"};
	
	private static final HashMap<String, HashMap<String, String>> map = Methods.getMapWithTime();
	
	private static ImageView imagedurazno;
	private static ImageView imagemanzana;
	private static ImageView imagenaranja;
	private static ImageView imagepera;
	
	private static Parcela parcela;
	private static Label label;
	
	public Fruits(Parcela parcela_fruta, Label lcluster) {
		parcela = parcela_fruta;
		label = lcluster;
	}
	
	public static HBox getFruits() {
		HBox hfruits = new HBox();
		hfruits.setSpacing(10.0);
		
		for (String path: paths) {
			switch(path) {
				case "file:src/frutas/durazno.png":
					imagedurazno = new ImageView(new Image(path));
					imagedurazno.setFitWidth(70.0);
					imagedurazno.setFitHeight(70.0);
					hfruits.getChildren().add(imagedurazno);
					break;
				case "file:src/frutas/manzana.png":
					imagemanzana = new ImageView(new Image(path));
					imagemanzana.setFitWidth(70.0);
					imagemanzana.setFitHeight(70.0);
					hfruits.getChildren().add(imagemanzana);
					break;
				case "file:src/frutas/naranja.jpg":
					imagenaranja = new ImageView(new Image(path));
					imagenaranja.setFitWidth(70.0);
					imagenaranja.setFitHeight(70.0);
					hfruits.getChildren().add(imagenaranja);
					break;
				case "file:src/frutas/pera.png":
					imagepera = new ImageView(new Image(path));
					imagepera.setFitWidth(70.0);
					imagepera.setFitHeight(70.0);
					hfruits.getChildren().add(imagepera);
					break;
				default:
					break;
			}
		}
		
		setButtonAction();
		
		return hfruits;
	}
	
	private static void setButtonAction() {
		imagedurazno.setOnMouseClicked(e -> {
			if(!parcela.isOcupado()) {
				parcela.setCosechar(false);
				parcela.setOcupado(true);
				System.out.println("Ingresando durazno");
				try {
					int value = Integer.parseInt(map.get("frutas").get("durazno"));
					Thread.sleep(value * 1000);
				} catch(Exception exception){
					System.out.println(exception.getMessage());
				}
				parcela.setCosechar(true);
			}else System.out.println("Parcela ocupada aun...");
			
			if(parcela.isCosechar()) {
				parcela.setCosechar(false);
				System.out.println("Cosechado..");
				String[] sp = label.getText().split("\n");
				StringBuilder sb = new StringBuilder();
				for(String pedido: sp) {
					String[] split = pedido.split(" ");
					if(!split[1].equals("durazno")) {
						sb.append(pedido + "\n");
					}
				}
				label.setText(sb.toString());
			} else System.out.println("Aun no listo para cosechar");
		});
		
		imagemanzana.setOnMouseClicked(e -> {
			if(!parcela.isOcupado()) {
				parcela.setCosechar(false);
				parcela.setOcupado(true);
				System.out.println("Ingresando manzana");
				try {
					int value = Integer.parseInt(map.get("frutas").get("manzana"));
					Thread.sleep(value * 1000);
				} catch(Exception exception){
					System.out.println(exception.getMessage());
				}
				parcela.setCosechar(true);
			}else System.out.println("Parcela ocupada aun...");
			
			if(parcela.isCosechar()) {
				parcela.setCosechar(false);
				System.out.println("Cosechado..");
				String[] sp = label.getText().split("\n");
				StringBuilder sb = new StringBuilder();
				for(String pedido: sp) {
					String[] split = pedido.split(" ");
					if(!split[1].equals("manzana")) {
						sb.append(pedido + "\n");
					}
				}
				label.setText(sb.toString());
			} else System.out.println("Aun no listo para cosechar");
		});
		
		imagenaranja.setOnMouseClicked(e -> {
			if(!parcela.isOcupado()) {
				parcela.setOcupado(true);
				parcela.setCosechar(false);
				System.out.println("Ingresando naranja");
				try {
					int value = Integer.parseInt(map.get("frutas").get("naranja"));
					Thread.sleep(value * 1000);
				} catch(Exception exception){
					System.out.println(exception.getMessage());
				}
				parcela.setCosechar(true);
			}else System.out.println("Parcela ocupada aun...");
			
			if(parcela.isCosechar()) {
				parcela.setCosechar(false);
				System.out.println("Cosechado..");
				String[] sp = label.getText().split("\n");
				StringBuilder sb = new StringBuilder();
				for(String pedido: sp) {
					String[] split = pedido.split(" ");
					if(!split[1].equals("naranja")) {
						sb.append(pedido + "\n");
					}
				}
				label.setText(sb.toString());
			} else System.out.println("Aun no listo para cosechar");
		});
		
		imagepera.setOnMouseClicked(e -> {
			if(!parcela.isOcupado()) {
				parcela.setOcupado(true);
				parcela.setCosechar(false);
				System.out.println("Ingresando pera");
				try {
					int value = Integer.parseInt(map.get("frutas").get("pera"));
					Thread.sleep(value * 1000);
				} catch(Exception exception){
					System.out.println(exception.getMessage());
				}
				parcela.setCosechar(true);
			}else System.out.println("Parcela ocupada aun...");
			
			if(parcela.isCosechar()) {
				parcela.setCosechar(false);
				System.out.println("Cosechado..");
				String[] sp = label.getText().split("\n");
				StringBuilder sb = new StringBuilder();
				for(String pedido: sp) {
					String[] split = pedido.split(" ");
					if(!split[1].equals("pera")) {
						sb.append(pedido + "\n");
					}
				}
				label.setText(sb.toString());
			} else System.out.println("Aun no listo para cosechar");
		});
	}
}